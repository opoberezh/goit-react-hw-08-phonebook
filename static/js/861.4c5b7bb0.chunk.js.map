{"version":3,"file":"static/js/861.4c5b7bb0.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.js","components/pages/Login.js"],"sourcesContent":["import { Formik, Field } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { useState } from 'react';\nimport * as Yup from 'yup';\nimport { TextField, Button, InputAdornment, IconButton } from '@mui/material';\nimport { ImEyeBlocked, ImEye } from \"react-icons/im\";\nimport { styled } from '@mui/material/styles';\n\nconst StyledButton = styled(Button)({\n  backgroundColor: '#2F4F4F',\n  boxShadow: '6px 6px 6px 0px rgba(0, 0, 0, 0.55)',\n  transition: 'background-color 0.3s ease',\n  '&:hover': {\n      backgroundColor: '#1E3535',\n     color: '#ffffff',\n    },\n    '&:active': {\n      backgroundColor: '#1E3535',\n      color: '#ffffff',\n    },\n})\n\nconst LogInSchema = Yup.object({\n  email: Yup.string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: Yup.string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\n\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handlePasswordVisibility = () => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  };\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={LogInSchema}\n      onSubmit={({ ...values }, actions) => {\n        dispatch(logIn({ ...values }));\n        actions.resetForm();\n      }}\n    >\n      {({ handleSubmit }) => (\n        <form  onSubmit={handleSubmit} style={{width: '300px',\n        margin: '0 auto',\n        textAlign: 'center',}} >\n          <Field name=\"email\">\n            {({ field, form: { touched, errors } }) => (\n              <TextField style={{ \n                boxShadow: \"6px 6px 6px 0px rgba(0,0,0,0.55)\",\n              }}\n                {...field}\n                label=\"Email\"\n                variant=\"outlined\"\n                error={touched.email && Boolean(errors.email)}\n                helperText={touched.email && errors.email}\n                fullWidth\n                margin=\"normal\"\n                autoComplete=\"off\"\n                size=\"small\"\n              />\n            )}\n          </Field>\n\n          <Field name=\"password\"  >\n            {({ field, form: { touched, errors } }) => (\n              <TextField style={{ \n                boxShadow: \"6px 6px 6px 0px rgba(0,0,0,0.55)\",\n              }}\n                {...field}\n                type={showPassword ? 'text' : 'password'}\n                label=\"Password\"\n                variant=\"outlined\"\n                error={touched.password && Boolean(errors.password)}\n                helperText={touched.password && errors.password}\n                fullWidth\n                margin=\"normal\"\n                autoComplete=\"off\"\n                size=\"small\"\n                sx={{ mb: 2 }}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton onClick={handlePasswordVisibility}>\n                        {showPassword ? <ImEyeBlocked /> : <ImEye />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            )}\n          </Field>\n\n          <StyledButton type=\"submit\" variant=\"contained\" fullWidth>\n            LOG IN\n          </StyledButton>\n        </form>\n      )}\n    </Formik>\n  );\n};","import { Helmet } from 'react-helmet';\nimport { LoginForm } from \"components/LoginForm/LoginForm\";\n\n\n\nexport default function Login() {\n    return (\n      <div>\n        <Helmet>\n          <title>Login</title>\n        </Helmet>\n        <LoginForm />\n      </div>\n    );\n  };"],"names":["StyledButton","styled","Button","backgroundColor","boxShadow","transition","color","LogInSchema","Yup","email","required","password","min","LoginForm","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","handlePasswordVisibility","prevShowPassword","_jsx","Formik","initialValues","validationSchema","onSubmit","_ref","actions","values","Object","assign","_objectDestructuringEmpty","logIn","_objectSpread","resetForm","children","_ref2","handleSubmit","_jsxs","style","width","margin","textAlign","Field","name","_ref3","field","_ref3$form","form","touched","errors","TextField","label","variant","error","Boolean","helperText","fullWidth","autoComplete","size","_ref4","_ref4$form","type","sx","mb","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","ImEyeBlocked","ImEye","Login","Helmet"],"sourceRoot":""}